<robot name="test_robot">

  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.16 0.16 0.12"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.085"/>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
  </link>

</robot>

Next, edit your launch file to include these two lines:

  <param name="robot_description" textfile="$(find my_robot)/my_robot.urdf" />
  <node pkg="rviz" type="rviz" name="rviz" output="screen"/>
  <node pkg="differential_drive" type="diff_tf.py" name="diff_tf">
     <rosparam param="rate">8.0</rosparam>
     <rosparam param="base_width">0.245</rosparam>
  </node>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" /> 

(URDF and robot_state_publisher are part of the robot_model stack. Does that need to be installed, or is it part of core ROS installation? Does it need to be a dependancy?) Launch this launch file, and you should be able to drive the robot and have RVIZ track its location.

Update the URDF

The next step is to update the URDF file to look more like your robot. Add wheels and other components. The URDF tutorials are the best place to look for more information. Here is how my robot's URDF file ended up:

切换行号显示

<robot name="test_robot">

  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.16 0.16 0.12"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.085"/>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
  </link>
  
  <link name="lwheel">
    <visual>
      <geometry>
        <cylinder length="0.008" radius="0.046"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
  </link>
  
  <joint name="base_to_lwheel" type="fixed">
    <parent link="base_link"/>
    <child link="lwheel"/>
    <origin xyz="0 0.115 0.046" rpy="1.5708 0 0"/>
  </joint>
  
  <link name="rwheel">
    <visual>
      <geometry>
        <cylinder length="0.008" radius="0.046"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
  </link>
  
  <joint name="base_to_rwheel" type="fixed">
    <parent link="base_link"/>
    <child link="rwheel"/>
    <origin xyz="0 -0.115 0.046" rpy="-1.5708 0 0"/>
  </joint>
  
  <link name="fwheel_attach">
    <visual>
      <geometry>
        <cylinder length="0.060" radius="0.023"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0.13 0 0.08"/>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
  </link>
  
  <joint name="base_to_fattach" type="fixed">
    <parent link="base_link"/>
    <child link="fwheel_attach"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>
  
  <link name="fwheel">
    <visual>
      <geometry>
        <cylinder length="0.005" radius="0.020"/>
      </geometry>
      <origin rpy="1.578 0 0" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
  </link>
  
  <joint name="base_to_fwheel" type="fixed">
    <parent link="base_link"/>
    <child link="fwheel"/>
    <origin xyz="0.13 0 0.02" rpy="0 0 0"/>
  </joint>
  
  <link name="scanner">
    <visual>
      <geometry>
        <box size="0.015 0.045 0.015"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0.022 0 0.015"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
  </link>
  
  <joint name="base_to_scanner" type="fixed">
    <parent link="base_link"/>
    <child link="scanner"/>
    <origin xyz="0.105 0 0.22" rpy="0 0 0"/>

  
</robot>

